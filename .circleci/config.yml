version: 2

general:
  branches:
    only:
     - master
     - devel

base_image: &base_image
  hashicorp/terraform:full

working_directory: &working_directory
  ~/ws

default_config: &default_config
  docker:
    - image: *base_image
  working_directory: *working_directory
  environment:
    ENV_FILE: ~/ws/.env

set_terraform_environment: &set_terraform_environment
  run:
    name: Set Terraform environment
    command: |
      cd && touch $ENV_FILE
      if [ "${CIRCLE_BRANCH}" == "master" ]; then
        echo 'export TF_ENV=prod' >> $ENV_FILE
      else
        echo 'export TF_ENV=dev' >> $ENV_FILE
      fi

terraform_init: &terraform_init
  run:
    name: Terraform init
    command: |
      source $BASH_ENV
      cd infra
      TF_WORKSPACE=${TF_ENV} terraform init -input=false

apply_job: &apply_job
  <<: *default_config
  steps:
    - attach_workspace:
        at: *working_directory
    - run:
        name: Terraform apply
        command: |
          source $BASH_ENV
          if [[ -f plan/${TF_ENV}-tf.plan ]]; then
            DIR=`pwd`
            cd infra
            TF_WORKSPACE=${TF_ENV} terraform apply -input=false --auto-approve ${DIR}/plan/${TF_ENV}-tf.plan
          fi
          echo "No plan generated, skipping.."

jobs:

  build:
    <<: *default_config
    steps:
      - checkout
      - *set_terraform_environment
      - run:
          name: Terraform fmt
          command: |
            source $BASH_ENV
            if [ $(terraform fmt | grep -v .terraform | tee fmt_result.txt | wc -l) -gt 0 ]; then
              echo "Format of this terraform files is not appropiate:"
              echo
              cat fmt_result.txt
              rm fmt_result.txt
              git checkout -- .
              echo
              echo "Please run terraform fmt and commit again"
              exit 1
            fi
      - persist_to_workspace:
          root: .
          paths: .

  plan:
    <<: *default_config
    steps:
      - attach_workspace:
          at: *working_directory
      - run:
          name: Terraform plan
          command: |
            source $BASH_ENV
            mkdir -p plan
            DIR=`pwd`
            cd infra
            TF_WORKSPACE=${TF_ENV} terraform plan -input=false -var-file=env/${TF_ENV}.tfvars -out=${TF_ENV}-tf.plan
      - persist_to_workspace:
          root: .
          paths: .

  apply:
    <<: *apply_job

  apply-with-approval:
    <<: *apply_job

workflows:
  version: 2
  infrastructure:
    jobs:
      - build
      - plan:
          requires:
            - build
      - approve:
          type: approval
          requires:
            - plan
          filters:
            branches:
              only: master
      - apply-with-approval:
          requires:
            - approve
          filters:
            branches:
              only: master
      - apply:
          requires:
            - plan
          filters:
            branches:
              only: devel
